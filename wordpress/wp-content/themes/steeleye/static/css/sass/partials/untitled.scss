/*
SCSS variables and mixins
*/

$color__active: grey;
$breakpoint: 800px;
@mixin tab-active() {
  background: $green;
  color: #eee;
}


.tabbed-content {
  background: $blue;
  max-width: 840px;
  padding: 60px;
  border-radius: 5px;
}
.tabs {
  ul {
    margin: 0;
    padding: 0 0 1em 0;
    font-weight: bold;
    li {
      background: #eee;
      a {
        padding: .5em 1em;
        &:hover,
        &.active {
          @include tab-active();
        }
      }
    } 
  }
}
.item {
  margin-bottom: 2px;
  &::before {
    cursor: pointer;
    font-weight: bold;
    // background: #eee;
    padding: .5em;
    display: block;
  }
  &.active {
    &::before {
      @include tab-active();
    }
    .item-content {
      padding: 1em;
      -webkit-transition: opacity 0.3s ease-in-out;
      -moz-transition: opacity 0.3s ease-in-out;
      -o-transition: opacity 0.3s ease-in-out;
      -ms-transition: opacity 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out;
    }
  }
}
@media all and (min-width: $breakpoint ) {
  .item {
    &.active {
      .item-content {
        padding-top: 0;
      }  
    }
  }
  .tabs-side {
    .tabs {
      li {
        margin-bottom: 2px;
      }
    }
  }
}

/* 
The project specific CSS starts here
This is the minimum CSS that you will need in order for this to work
*/

// Accordion for small screens (mobile first principle)
.tabbed-content {
  .tabs {
    display: none;
  }
  .item {
    min-height: 2em; // We need a minimum height for each item or else the accordion buttons would dissapear
    &::before {
      content: attr(data-title); // Instead of polluting the HTML with a duplicate set of tabs, we get the accordion using the data-title attribute.
    }
    .item-content { // We hide the inactive content with zero opacity instead of "display:none" because this allows us to apply transition effects if we want. 
      opacity: 0;
      visibility: hidden;
      height: 0;
    }
    &.active {
      .item-content {
        opacity: 1;
        visibility: visible;
        height:auto;
      }
    }
  }  
}


// Tabs for larger screens
@media all and (min-width: $breakpoint) {
  .tabbed-content {
    .tabs {
      display: block;
      li {
        display: inline-block;
        a {
          display: block;
        }
      }
    }
    .item {
      min-height: 0;
      &::before {
        display: none;
      }
    }
    // Tabs on the side (works only on big screens)
    &.tabs-side {
      .tabs {
        width: 395px;
        float: left;
        li {
          display: block;
        }
      }
      .item {
        margin-left: 395px;
      }
    }  
  }
}